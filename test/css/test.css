@charset "UTF-8";
/* # Module: Settings */
/* ------------------ */
/* Test: true-context [mixin] */
/*   ✔ Confirm that there is currently no "fake" scope */
/*   ✔ Sets the value of scope "fake" to "this scope is not real" */
/*   ✔ Confirm that our "fake" scope has been removed */
/*  */
/* Test: _true-context [function] */
/*   ✔ Returns the current module name */
/*   ✔ Returns the current test name */
/*  */
/*  */
/* # Module: Utilities */
/* ------------------- */
/* Test: Map Add [function] */
/*   ✔ Returns the sum of two numeric maps */
/*  */
/* Test: String Split [function] */
/*   ✔ Returns a list of substrings, based on any delimiter. */
/*  */
/* Test: Strict Equal [function] */
/*   ✔ Returns false for equal numbers with different units. */
/*   ✔ Returns true for numbers that are truly equal. */
/*  */
/*  */
/* # Module: True Message */
/* ---------------------- */
/* Test: Simple messages */
/*   ASSERT: Render as CSS comments   */
/*   OUTPUT   */
/* This is a simple message */
/*   END_OUTPUT   */
/*   EXPECTED   */
/* This is a simple message */
/*   END_EXPECTED   */
/*   END_ASSERT   */
/*  */
/* Test: Multi-line messages */
/*   ASSERT: Render as multiple CSS comments   */
/*   OUTPUT   */
/* This is a  */
/* multiline message */
/*   END_OUTPUT   */
/*   EXPECTED   */
/* This is a  */
/* multiline message */
/*   END_EXPECTED   */
/*   END_ASSERT   */
/*  */
/*  */
/* # Module: Results */
/* ----------------- */
/* Test: Reset */
/*   ✔ Add a passing result to the test */
/*   ✔ Check that test results are not in a clean state */
/*   ✔ Resets the results for a given scope */
/*  */
/* Test: Get results */
/*   ✔ Returns the current results map for a given scope */
/*  */
/* Test: Get result */
/*   ✔ Collates a set of results to pass up the scope hierarchy */
/*  */
/*  */
/* # Module: Modules */
/* ----------------- */
/* Test: test-module */
/*   ✔ Resets module scope results */
/*   ✔ Changes the current module context */
/*  */
/*  */
/* # Module: Tests */
/* --------------- */
/* Test: test [mixin] */
/*   ✔ Resets module scope results */
/*   ✔ Changes the current test context */
/*  */
/*  */
/* # Module: Assert */
/* ---------------- */
/* Test: Assert True [mixin] */
/*   ✔ True should assert true. */
/*  */
/* Test: Assert False [mixin] */
/*   ✔ False should assert false. */
/*  */
/* Test: Assert Equal [mixin] */
/*   ✔ 1 and 1 should be equal. */
/*  */
/* Test: Assert Unequal [mixin] */
/*   ✔ 1 and 3 should be un-equal. */
/*  */
/* Test: Assert CSS: output/expect [mixins] */
/*   ASSERT: Output and expected selector patterns match   */
/*   OUTPUT   */
.test-output {
  -property: value; }
  @media (min-width: 30em) {
    .test-output {
      -prop: val; }
      .selector {
        -prop: val; } }

/*   END_OUTPUT   */
/*   EXPECTED   */
.test-output {
  -property: value; }
  @media (min-width: 30em) {
    .test-output {
      -prop: val; }
      .selector {
        -prop: val; } }

/*   END_EXPECTED   */
/*   END_ASSERT   */
/*  */
/*  */
