// Utilities
// =========



// Map Increment
// -------------
/// Add map values together
/// @access private
/// @group private
/// @param {Map} $base -
///   Initial map to add values to
/// @paramÂ {Map} $add -
///   Map of values to be added
/// @return {Map}
@function _true-map-increment(
  $base,
  $add
) {
  @each $key in map-keys($add) {
    $value: map-get($add, $key);

    @if $value {
      $base-value: map-get($base, $key);
      $new-value: if($base-value, $base-value + $value, $value);
      $base: map-merge($base, ($key: $new-value));
    }
  }

  @return $base;
}


// Join Multiple
// -------------
@function _true-join-multiple(
  $lists...
) {
  $return: nth($lists, 1);
  $type: list-separator($return);
  $last: nth($lists, -1);
  $length: length($lists);

  @if ($last == 'space') or ($last == 'comma') {
    $length: $length - 1;
    $type: $last;

  }

  @if ($length < 2) {
    @error 'Must provide at least 2 lists for _true-join-multiple';
  }

  @for $i from 2 through $length {
    $return: join($return, nth($lists, $i), $type);
  }

  @return $return;
}
